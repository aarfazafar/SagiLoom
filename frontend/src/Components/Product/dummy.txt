import { useState } from "react";
import { Star, Expand, ChevronDown, ChevronUp } from "lucide-react";

const ProductOverview = () => {
  const [selectedImage, setSelectedImage] = useState(0);
  const [selectedColor, setSelectedColor] = useState("black");
  const [selectedSize, setSelectedSize] = useState("");
  const [expandedSection, setExpandedSection] = useState("");

  const product = {
    name: "Premium Merino Wool Sweater",
    price: 129.99,
    originalPrice: 159.99,
    rating: 4.8,
    reviews: 128,
    description: "Luxurious merino wool sweater designed for comfort and style. Perfect for any occasion.",
    images: [
      "https://kisah.in/cdn/shop/files/KA-1011-E101-07.jpg?v=1742891663&width=5000",
      "https://kisah.in/cdn/shop/files/KA-1011-E101-05.jpg?v=1742891663&width=5000",
      "https://kisah.in/cdn/shop/files/KA-1011-E101-03.jpg?v=1742891662&width=5000",
      "https://kisah.in/cdn/shop/files/KA-1011-E101-06.jpg?v=1742891663&width=5000"
    ],
    colors: [
      { name: "Black", code: "#000000" },
      { name: "Navy", code: "#000080" },
      { name: "Gray", code: "#808080" },
      { name: "Burgundy", code: "#800020" }
    ],
    sizes: ["XS", "S", "M", "L", "XL"],
    availableSizes: ["S", "M", "L", "XL"],
    features: [
      "100% Premium Merino Wool",
      "Moisture-wicking",
      "Temperature regulating",
      "Naturally odor-resistant"
    ],
    care: [
      "Machine wash cold",
      "Lay flat to dry",
      "Do not bleach",
      "Iron on low heat if needed"
    ]
  };

  const StarRating = ({ rating }) => {
    return (
      <div className="flex items-center transition-all duration-300 hover:scale-105">
        {[...Array(5)].map((_, index) => (
          <Star
            key={index}
            className={`w-4 h-4 transition-colors duration-300 ${index < Math.floor(rating) ? "text-yellow-400 fill-yellow-400" : "text-gray-300"}`}
          />
        ))}
      </div>
    );
  };

  const handleImageError = (e) => {
    e.target.src = "https://kisah.in/cdn/shop/files/KA-1011-E101-07.jpg?v=1742891663&width=5000";
  };

  const canAddToCart = selectedColor && selectedSize;

  return (
    <div className="max-w-7xl mx-auto px-4 py-8 sm:px-6 lg:px-8">
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <div className="space-y-4">
          <div className="relative overflow-hidden rounded-lg bg-gray-100 shadow-lg transition-transform duration-300 hover:shadow-xl">
            <img
              src={product.images[selectedImage]}
              alt={product.name}
              className="w-full h-[500px] object-cover object-center transition-transform duration-500 hover:scale-105"
              onError={handleImageError}
              loading="lazy"
            />
            <button className="absolute top-4 right-4 p-2 bg-white/80 backdrop-blur-sm rounded-full hover:bg-white transition-all duration-300 hover:shadow-lg">
              <Expand className="w-5 h-5" />
            </button>
          </div>
          <div className="grid grid-cols-4 gap-4">
            {product.images.map((image, index) => (
              <button
                key={index}
                onClick={() => setSelectedImage(index)}
                className={`relative rounded-lg overflow-hidden transition-all duration-300 hover:shadow-lg ${selectedImage === index ? "ring-2 ring-black scale-95" : "hover:scale-105"}`}
              >
                <img
                  src={image}
                  alt={`${product.name} view ${index + 1}`}
                  className="w-full h-24 object-cover"
                  onError={handleImageError}
                  loading="lazy"
                />
              </button>
            ))}
          </div>
        </div>

        <div className="space-y-6">
          <div className="transform transition-all duration-300 hover:translate-x-2">
            <h1 className="text-3xl font-bold text-gray-900">{product.name}</h1>
            <div className="mt-4 flex items-center space-x-4">
              <div className="flex items-baseline">
                <span className="text-2xl font-bold text-gray-900">${product.price}</span>
                <span className="ml-2 text-lg text-gray-500 line-through">${product.originalPrice}</span>
              </div>
              <div className="flex items-center space-x-2">
                <StarRating rating={product.rating} />
                <span className="text-sm text-gray-500">({product.reviews} reviews)</span>
              </div>
            </div>
          </div>

          <p className="text-gray-600 transition-all duration-300 hover:text-gray-900">{product.description}</p>

          <div className="transform transition-all duration-300 hover:translate-x-2">
            <h2 className="text-sm font-medium text-gray-900">Color</h2>
            <div className="mt-3 flex space-x-3">
              {product.colors.map((color) => (
                <button
                  key={color.name}
                  onClick={() => setSelectedColor(color.name)}
                  className={`relative w-8 h-8 rounded-full focus:outline-none transition-all duration-300 hover:scale-110 ${selectedColor === color.name ? "ring-2 ring-offset-2 ring-black" : "hover:ring-2 hover:ring-offset-2 hover:ring-gray-300"}`}
                  style={{ backgroundColor: color.code }}
                  title={color.name}
                />
              ))}
            </div>
          </div>

          <div className="transform transition-all duration-300 hover:translate-x-2">
            <h2 className="text-sm font-medium text-gray-900">Size</h2>
            <div className="mt-3 grid grid-cols-5 gap-3">
              {product.sizes.map((size) => {
                const isAvailable = product.availableSizes.includes(size);
                return (
                  <button
                    key={size}
                    onClick={() => isAvailable && setSelectedSize(size)}
                    className={`
                      py-2 text-sm font-medium rounded-md transition-all duration-300
                      ${isAvailable
                        ? selectedSize === size
                          ? "bg-black text-white transform scale-95"
                          : "bg-gray-100 text-gray-900 hover:bg-gray-200 hover:scale-105"
                        : "bg-gray-100 text-gray-400 cursor-not-allowed opacity-60"}
                    `}
                    disabled={!isAvailable}
                  >
                    {size}
                  </button>
                );
              })}
            </div>
          </div>

          <button
            className={`w-full py-3 px-8 rounded-md text-lg font-medium text-white transition-all duration-300
              ${canAddToCart ? "bg-black hover:bg-gray-900 hover:shadow-lg transform hover:-translate-y-1" : "bg-gray-400 cursor-not-allowed"}`}
            disabled={!canAddToCart}
          >
            Add to Cart
          </button>

          <div className="space-y-4">
            {["Features", "Care"].map((section) => (
              <div key={section} className="border-t pt-4">
                <button
                  onClick={() => setExpandedSection(expandedSection === section ? "" : section)}
                  className="flex justify-between items-center w-full text-left transition-all duration-300 hover:translate-x-2"
                >
                  <span className="text-lg font-medium text-gray-900">{section}</span>
                  {expandedSection === section ? (
                    <ChevronUp className="w-5 h-5 transition-transform duration-300" />
                  ) : (
                    <ChevronDown className="w-5 h-5 transition-transform duration-300" />
                  )}
                </button>
                {expandedSection === section && (
                  <ul className="mt-4 space-y-2 text-gray-600 animate-fadeIn">
                    {(section === "Features" ? product.features : product.care).map((item) => (
                      <li key={item} className="flex items-start transition-all duration-300 hover:translate-x-2">
                        <span className="block h-2 w-2 mt-2 mr-2 rounded-full bg-gray-400" />
                        {item}
                      </li>
                    ))}
                  </ul>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductOverview;